#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "blackjack_play"
#include "blackjack_before"

#define N_CARDSET			1
#define N_CARD				52
#define N_DOLLAR			50


#define N_MAX_CARDNUM		13
#define N_MAX_USER			5
#define N_MAX_CARDHOLD		10
#define N_MAX_GO			17
#define N_MAX_BET			5

#define N_MIN_ENDCARD		30	

//card tray object
extern int CardTray[N_CARDSET*N_CARD];
extern int cardIndex = 0;							


//player info
extern int dollar[N_MAX_USER];						//dollars that each player has
extern int n_user;									//number of users


//play yard information
extern int cardhold[N_MAX_USER+1][N_MAX_CARDHOLD];	//cards that currently the players hold
extern int cardholdnum[N_MAX_CARDHOLD]; //card number that players hold
extern int cardSum[N_MAX_USER];					//sum of the cards
extern int bet[N_MAX_USER];						//current betting 
extern int gameEnd = 0; 							//game end flag
extern int roundnum=1;


//betting
int betDollar(void) {
	int i;
	int bet;
	
	printf(" ------- BETTING STEP -------\n");
	printf("-> your betting (total:$%d) :",N_DOLLAR);
	scanf("%d",bet);
	
	if (bet>N_DOLLAR){
	
		printf("bet again.");
		return betDollar();}	
			
	N_DOLLAR=N_DOLLAR-bet;
	
	for (i=1;i<n_user;i++){
		
		bet[i] = rand()% N_MAX_BET+1;
		printf("-> player%d bets $%d (out of $%d)\n",i,bet[i],dollar[i]);}
		
	return 0;
}


//offering initial 2 cards
void offerCards(void) {
	int i;
	//1. give two card for each players
	for (i=0;i<n_user;i++)
	{
		cardhold[i][0] = pullCard();
		cardhold[i][1] = pullCard();
	}
	//2. give two card for the operator
	cardhold[n_user][0] = pullCard();
	cardhold[n_user][1] = pullCard();
	
	return;
}

//print initial card status
void printCardInitialStatus(void) {
	int i;
	printf(" ----------- CARD OFFERING ---------------\n");
	
	printf("--- server: X ");
	printCard(cardhold[n_user][1]);
	printf("\n");
	printf(" -> you: ");

	printCard(cardhold[0][0]);
	printf(" ");
	printCard(cardhold[0][1]);
	printf("\n");

	for(i=1;i<n_user;i++){	

		printf(" -> player %d: ",i);
		printCard(cardhold[i][0]);
		printf(" ");
		printCard(cardhold[i][1]); 
		printf("\n");}

}

	 


int getAction(void) {
	int y;	
	printf(":::Action? 0-go, others-stay");
	scanf("%d", y);
	if (y==0){
		return 0;}
	else{
		return 1;}
		
}	



void printUserCardStatus(int user, int cardcnt) {
	int i;
	
	printf("   -> card : ");
	for (i=0;i<cardcnt;i++)
		printCard(cardhold[user][i]);
	printf("\t ::: ");
}




// calculate the card sum
int calcStepResult(int user, int cardcnt) {
	
	int i;
	cardSum[user]=0;
	
	for (i=0; i<cardcnt;i++){
		cardSum[user]+=cardnum;
	}
	
	//see if : 1. under 21, 2. over 21, 3. blackjack

	if(cardSum[user]<21){
		printf("(%d)", cardSum[user]);
		return 1;
	}

	else if(cardSum[user]>21){
		printf("(%d)",cardSum[user]);
		return 2;
	}

	else{
		printf("(%d, blackjack)", cardSum[user]);

		return 3;
	}
